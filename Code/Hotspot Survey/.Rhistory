rawdata_file_path <- "/Users/meyhar/Dropbox/DIME_Meyhar/Kenya/roadcrash-survey"
# Load Data --------------------------------------------------------------------
survey <- read.csv(file.path(rawdata_file_path, "crash_survey_pilot_WIDE.csv"))
survey.head()
head()
head.survey()
head(survey)
head(survey$name)
# Stack Segments ---------------------------------------------------------------
common_vars <- which(!grepl("_[[:digit:]]$", names(survey)))
common_vars
head(common_vars)
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric
head(survey)
head(common_vars)
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric
common_vars <- which(!grepl("_[[:digit:]]$", names(survey)))
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric
repeat_group_vars <- c("gps_pedcrossing", "ped_cross", "ped_cross_quality", "ped_cross_intersect", "ped_fence")
repeat_group_vars_coll <- repeat_group_vars %>% paste(collapse="|")
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric %>%
repeat_group_vars <- c("gps_pedcrossing", "ped_cross", "ped_cross_quality", "ped_cross_intersect", "ped_fence")
library(leaflet)
library(dplyr)
library(rgdal)
library(rgeos)
library(data.table)
library(lubridate)
library(ggplot2)
library(raster)
library(sp)
library(spdep)
library(broom)
library(raster)
library(parallel)
library(pbmcapply)
library(stringr)
library(dplyr)
library(readxl)
library(haven)
library(doBy)
library(grid)
library(gridExtra)
library(gtable)
library(leaflet)
library(dplyr)
library(rgdal)
library(rgeos)
library(data.table)
library(lubridate)
library(ggplot2)
library(raster)
library(sp)
library(spdep)
install.packages("spdep")
library(spdep)
library(broom)
library(raster)
library(parallel)
library(pbmcapply)
library(stringr)
library(dplyr)
library(readxl)
library(haven)
library(doBy)
install.packages("doBy")
library(grid)
library(gridExtra)
library(gtable)
rawdata_file_path <- "/Users/meyhar/Dropbox/DIME_Meyhar/Kenya/roadcrash-survey"
# Load Data --------------------------------------------------------------------
survey <- read.csv(file.path(rawdata_file_path, "crash_survey_pilot_WIDE.csv"))
# Stack Segments ---------------------------------------------------------------
common_vars <- which(!grepl("_[[:digit:]]$", names(survey)))
segment_ids <- names(survey)[grepl("roadnum", names(survey))] %>% str_replace_all("[[:alpha:]]|[[:punct:]]", "") %>% as.numeric
repeat_group_vars <- c("gps_pedcrossing", "ped_cross", "ped_cross_quality", "ped_cross_intersect", "ped_fence")
repeat_group_vars_coll <- repeat_group_vars %>% paste(collapse="|")
survey_stacked <- lapply(segment_ids, function(seg_id_i){
if(paste0("roadnum_",seg_id_i+1) %in% names(survey)){
segment_vars <- which(names(survey) == paste0("roadnum_",seg_id_i)):(which(names(survey) == paste0("roadnum_",seg_id_i+1))-1)
} else{
segment_vars <- which(names(survey) == paste0("roadnum_",seg_id_i)):(which(names(survey) == "instanceID")-1)
}
survey_s <- survey[,c(common_vars, segment_vars)]
# Change names: deal with repeat groups differently. #_roadid_repeatid
names(survey_s)[!grepl(repeat_group_vars_coll, names(survey_s))] <- names(survey_s)[!grepl(repeat_group_vars_coll, names(survey_s))] %>% str_replace_all("_[[:digit:]]$", "")
names(survey_s)[grepl(repeat_group_vars_coll, names(survey_s))] <- names(survey_s)[grepl(repeat_group_vars_coll, names(survey_s))] %>% str_replace_all("_[[:digit:]]_", "_")
survey_s$segment_id <- seg_id_i
return(survey_s)
}) %>% bind_rows
# Apply Labels -----------------------------------------------------------------
survey_stacked_nolabels <- survey_stacked
